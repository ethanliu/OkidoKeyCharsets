{"version":"20180904151653","datatables":[{"ename":"NewCJ3","cname":"亂倉打鳥","name":"","cin":"table\/NewCJ3.cin","db":"db\/NewCJ3.cin.db","license":"此碼表取自 https:\/\/hyperrate.com\/thread.php?tid=5775 (v20061209)\n但移除 candyz 個人資訊及網址等字根內容\n\n\n亂倉打鳥 (NewCJ3)\n\n說明\n\n倉頡輸入法，是由朱邦復先生於1976年所創製的中文輸入法。\n【亂倉打鳥】融合了倉頡三代及大新倉頡的優點，支援常用詞及日文字母及各種符號的輸入，提供一個更快速、更簡單好用的輸入環境，同時適合入門新手以及已使用倉三、快倉、✕✕倉等的老手們來使用 ..:P\n為什麼要叫【亂倉打鳥】？\n因為包含了倉頡三代、大新倉頡以及一些自創的規則，這樣一個 \"亂\" 七八糟的 \"倉\" 頡要 \"打\" 個什麼 \"鳥\" 啊？這就是【亂倉打鳥】命名的由來。\n更多關於倉頡的詳細介紹，請參考 Wikipedia 的 倉頡輸入法 頁面。\n\n特色\n\n完全向下相容於倉頡三代。\n支援大新倉頡的語法。\n調整過後最佳化的標點符號、一字碼及二字碼的輸入。\n支援常用詞的輸入。\n參考 libchewing 的詞頻排序整理出二字碼、三字碼、四字碼及四字碼以上的常用詞及成語，目前共收錄將近七萬個詞，包含成語在內。\n支援漁村輸入法裡的各種符號輸入(包含日文平假名、片假名的輸入)。\n按 Google Search 的詞頻來排序之全詞庫版，共收錄了 22 萬多筆的詞。\n\nChangeLog\n\n2006\/12\/09\n大新輸入法的部分更新至 2006\/12\/08 版\n\n2006\/12\/06\n調整並更新一、二字碼部分\n\n2006\/12\/05\n大新輸入法的部分更新至 2006\/12\/04 版\n\n2006\/12\/02\n所有檔案及 SVN 架構全部重新整理過並更新過\n大新輸入法的部分更新至 2006\/12\/01 版\n亂倉打鳥的第四個版本正式釋出 (v0.0.4)，分成兩個版本：一般版(七萬個詞)及 Google 全詞庫版(二十二萬個詞)\n\n2006\/11\/29\n加入了 22 萬多筆的詞庫，並依 Google Search 的詞頻來排序，亂倉打鳥 Google 番外篇測試版釋出 (v0.0.3g)\n\n2006\/11\/28\n將所有的詞都補上第三欄位的詞頻部分，方便排序 (目前採用的詞頻是來自 libchewing 的詞庫)\n將所有的詞都經過詞頻排序過了，大大增加打字效率\n亂倉打鳥的第三個版本正式釋出 (v0.0.3)\n加入 PTT 流行名句 (亂倉打鳥從此可能要列入18禁了...囧rz)\n\n2006\/11\/27\n標點符號跟漁村符號的整理\n\n2006\/11\/26\n收錄大量的詞庫，約近七萬個詞了 (Defined Characters:134976、phrase count:68536)\n再加入漁村輸入法裡的一堆符號\n\n2006\/11\/25\n成語規則變更，原來的 ;+xxxx 改成 xxxx+; 這樣比較直覺，順序上，成語優先於四個字及四個字以上的常用詞\n參考 libchewing 裡的詞及詞頻來排序所有的詞，終於整理告一段落 (目前是先整理詞頻大於 1000 以上的)，目前共收錄了一萬三千多個常用詞\n另也補了一些大新倉頡沒收錄到的字，如喆、双、姹、髴等等\n亂倉打鳥的第二個版本正式釋出 (v0.0.2)\n\n2006\/11\/24\n更字常用詞庫三字碼、四字碼及四字碼以上\n\n2006\/11\/23\n補上 \"喆=trtr\" (Thanks to Pank)\n\"他\" 原本拆碼為 \"ox\"，為求跟 \"你\"、\"我\" 配合，改成用 \";o\" (o=other)，因此，二字碼之 \"ox\" 跟 \";o\" 對調，變成 \";o=他\" 及 \"ox=飲\"，而原本 \"他\" 的延伸 \"ox\" 開頭的則全改成為 \";o\" 開頭\n\n2006\/11\/22\nWindows Version Support\n成語舊規則為 \", + xxxx\" 已改成 \"; + xxxx\"，因為 \";\" 比 \",\" 更好用...XD]\n\n2006\/11\/21\nFirst Release (v0.0.1)\n\n\n"},{"ename":"array10","cname":"行列10","name":"","cin":"table\/array10a.cin","db":"db\/array10a.cin.db","license":"本輸入法表格係由行列科技公司廖明德先生（即行列輸入法發明人）提供原始對照表，經葉光哲先生（老刀）與廖先生共同修正編訂。\n\n「行列 10 數字輸入法」（以下簡稱「行列 10」）係為行列 30 鍵輸入法（以下簡稱「行列 30」）字根數字化的衍生版本，二者對於文字拆碼方式基本上是相同的。主要差異為使用 1234567890 共 10 個數字鍵輸入字根碼，來代替行列 30 中的鍵盤鍵位。本 1.0A 版本支援 Unicode 3.0 範圍（亦即包括中日韓統一表意文字延伸 A 區 (Ext-A)），共二萬七千餘漢字。\n\n註：本輸入法另提供支援 Unicode 3.1 範圍漢字（亦即包括中日韓統一表意文字延伸 B 區 (Ext-B)）的版本，版本號碼為 v1.0B。\n\n「行列 10」與「行列 30」相異之處，說明如下：\n\n輸入文字時，行列 30 係以「鍵位」代表字根，如字根「日」之字根碼為 01，即對應到英文鍵盤的 \"P\" 鍵；而行列 10 為直接輸入字根碼 (01)（其餘字根均依此類推）。\n單字根碼僅按單鍵（行列 30 的字根碼 1-，在行列 10 中僅按單鍵 (1) 即可），前後皆不補鍵。\n輸入罕用字時，行列 10 無需於字根尾補 \"I\" 鍵。\n行列 30 每個漢字最多拆 4 個字根（不含罕用字補 \"I\"）。因行列 10 採直接輸入字根碼的方式，故對每個漢字而言，無論是否為罕用字，最多拆 8 個數字。\n行列 10 亦保留輸入原先行列 30 的標點及符號組的功能。請以字根碼 (23)（即相當於鍵盤的 \"W\" 鍵）作為前導，第 3 碼為符號分組，如 (231) 輸入標點、(232) 輸入括弧、(233) 輸入一般符號……(230) 輸入注音符號，分組方式與行列 30 相同。\n為方便使用者更快速輸入標點及符號，於上述 (231) ~ (230) 10組之下再設支碼。如輸入 (231) 標點符號組時，(2311) 是該組第 1 頁的 10 個符號，(2312) 則是該組的第 2 頁的 10 個符號……（餘類推）。故當使用者熟知要的符號是標點符號的第幾頁後，就可以直接打 4 碼快速找到，例如要輸入「■」符號時，只要打 (2312) 再選第 7 個，如果不熟，打 (231) 3 碼再往後找，同樣可以找到。\n行列 10 新增輸入全形英文字母及數字的功能，並編入字根碼 (255)。當輸入 (255) 時即可自候選字窗選取，或亦可再輸入第 4 碼（分組支碼），以縮短選取全形文字所需時間。說明如下：\n\n(2551)：全形英文字母Ａ至Ｊ，共 10 個。\n(2552)：全形英文字母Ｋ至Ｔ，共 10 個。\n(2553)：全形英文字母Ｕ至Ｚ，共 6 個。\n(2554)：全形英文字母ａ至ｊ，共 10 個。\n(2555)：全形英文字母ｋ至ｔ，共 10 個。\n(2556)：全形英文字母ｕ至ｚ，共 6 個。\n(2550)：全形數字０至９，共 10 個。\n\n本輸入法為將行列字根數字化，部分文字的拆法（尤其是輸入標點符號方面）與原行列 30 鍵輸入法相較，已略有調整。故在此將廖明德先生發行原始對照表的註解摘錄整理於下，提供各位參考：\n\n本檔案已依照字頻序排列（前加幾個常用符號）。\n字頻資訊是以平衡語料庫加網路論壇的字頻統計資料綜合而成，以兼顧一般運用及網路上使用的均衡性。\n建議使用者使用行列數字輸入時，保持原來的想法輸入，如「二」字，雖然是輸入 (11)，但心裡還是想著 (1- 1-) 即默念（1單1單），只有在輸入「工」字時，才是想 (11)，這樣回到 30 鍵盤上才不會亂掉。\n本行列數字輸入法最多為 4 根 8 數碼（未加罕用區別碼）。因對照表以字頻排序，故程式接到敲鍵後宜以依序抓取，順序顯示待選字的方式處理，若再接收到下一個鍵，則再篩掉不合的字，保留符合的字，如此應該大部份的字都在敲 4 或 5 個數字鍵內就會出現供使用者選取。要注意這種情形，如「龜」有 (7711)、(77151)、(77198)、(7712) 四種拆法，使用者一直敲到第三個鍵 (771) 時，在對照表內符合的抓出來會有四個「龜」字，但只需顯示一個「龜」字，（當然 4 組編碼都要保留等待下一鍵進來比對）。\n非常用字的單根碼轉變成 4 根碼（4 根最多 8 碼）置於後段。\n編 (09) 開頭的特殊符號 09？  09『  09』 09． 09– 09＊ 09／ 09…\n編為 (09) 開頭是為了避開和 (08) 開頭的常用字混在一起。且 09 和 08 回到 30鍵時是同一鍵位。\n編 (35) 開頭的 35片 35 岩 35！ 35「 35」 35、 35“  35 ”35（ 35）\n編十組符號以 (23)（代替W）前導，(231)（標點）、(232)（括號）、(233)（一般）、(234)（數學）……等，共十組。\n數字編碼以 (23) 為十組符號的前導碼，因 (23) 沒有字根，位置一樣在 W，用它為前導碼就不會跟字混雜顯現，且使用者回到 30 鍵上輸入能夠保持一致。\n行列數字輸入應以隨著資訊增加漸縮符合字集的方式顯示待選字，在特殊符號的部份因每組符號有幾十個，因此配合漸縮字集方式設計成：\n\n當輸入 (231) 標點符號組，(2311) 是該組第 1 頁的十個符號，(2312) 則是該組的第 2 頁的十個符號……餘類推。\n當使用者熟知要的符號是標點符號的第幾頁後，就可以直接打 4 碼快速找到，例如要「■」符號，只要打 (2312) 再選第 7 個，如果不熟，打 (231) 3 碼再往後找也是找得到。\n\n版權聲明：\n\n本輸入法表格版權，屬廖明德先生與葉光哲先生共有。惟依行列輸入法公開授權使用之精神，歡迎各位朋友引用、散布（複製）。為使本輸入法符合各家作業平台及使用環境，亦歡迎使用者修改本檔案；惟請於所修改之原始檔或說明文字中，註明檔案來源及版次資訊（如：「本輸入法係修改自行列 10 數字輸入法 (array10 numeric) for LIME, v1.0A」），以因應未來本輸入法表格版本後續更新時，可提醒修正者或使用者配合維護。\n\n\n\n版本修訂歷程：\n\n2010-12-20 v1.0A   首次發行\n2018-8-25 本版修正了「鬥」（字根碼 33）錯植字根碼為 31 的問題，共包括「鬥鬪鬦䰗䰘鬨鬩鬫鬧鬭鬬鬮」計12字。\n2018-8-30 20180825 版「行列10」錯誤修正\n"},{"ename":"array26","cname":"行列廿六","name":"","cin":"table\/array26.cin","db":"db\/array26.cin.db","license":"﻿%gen_inp\n\n--------------------------------------------------------------------------------------------\n名稱：行列輸入法廿六鍵版之香草模組對照表（array26.cin）\n版本：0.4\n日期：2007年06月26日\n\n本array26.cin原始檔案是由林沛熙（lin_pepsi@yahoo.com）\n根據開放香草輸入法（OpenVanilla）中，\n由霍東靈AnthonyFok<foka@debian.org>君所整理之對照表修改而成。\n\n據悉，霍君利用行列科技在所提供之行列30對照表（1996年版），\n並承葉光哲(gontera)君與zonble鼎力協助，將字碼擴增為unicode字集，\n並支援一級簡碼外（不支援二級簡碼）與行列特別碼。\n\n感謝行列輸入法（行列科技）的發明人廖明德先生\n慷慨提供包含繁、簡中文字集共二萬九千餘字的unicode字集對照檔，\n並開放免費授權予社群進行修改與增補。\n\n本檔案採General Public License授權，\n歡迎各界無償（或僅收取適當成本）流通及使用；\n本檔案歡迎使用者自行修改，\n惟修改之後之檔案，亦須遵照GPL協定開放授權。\n\n本檔案之GPL授權，與行列輸入法及行列科技無關，\n行列輸入法及其相關法律權利，蓋屬行列科技所有。\n\n有關行列輸入法，請參觀http:\/\/www.array.com.tw\/內的介紹。\n--------------------------------------------------------------------------------------------\n\n\n\n下面這行是定義重碼的選字鍵\n\n\n下面這行是定義組字的結束鍵\n\n\n下面這行開始是定義字根鍵\n"},{"ename":"array30","cname":"行列30","name":"","cin":"table\/array30_OkidoKey_0.75.cin","db":"db\/array30_OkidoKey_0.75.cin.db","license":"\n\narray30.cin for OkidoKey (v0.75), 2015-10-26\n\n這個輸入法表格是 array30.cin for OpenVanilla v0.75 簡化而來，只\n保留 Unicode 3.0 亦即僅支援 4 byte 的 CJK Ext-A 字集，並刪除較罕用\n的 CJK Ext-B\/C\/D 字集，以節省行動裝置寶貴的記憶體空間。我另提供包\n括完整 CJK 字集的「大字集版本」，如有需要，請自行下載安裝。\n\n本檔案跟行列科技所提供的原始檔案一樣公開授權，又或可依據 GNU\nGeneral Public License (GPL) version 2 或新版公開授權，歡迎各界分\n布及使用。在此謹致謝行列科技之慷慨大方，讓大家可免費自由地使用行\n列輸入法。\n\n有關行列輸入法，請參觀 http:\/\/www.array.com.tw\/ 內的介紹。\n\n\n"},{"ename":"Array40","cname":"行列40","name":"","cin":"table\/array40.cin","db":"db\/array40.cin.db","license":"﻿ 行列 40 鍵輸入法 for OpenVanilla\n版本：0.15\n作者：葉光哲（老刀） MSN: gontera_yeh@hotmail.com\n\n以下的說明文字中，「行列輸入法」係指早期的 40 鍵版本；行列輸入法 30 鍵的版本以\n「行列30」稱之。\n\n這個早期版本的行列輸入法最初是內含於倚天中文系統之中。它與目前流行的「行列30」輸入法\n不同。OpenVanilla 標準安裝套件中已包含了「行列30」輸入法，如果您是該版本的使用者，則\n無須安裝本輸入法。本輸入法係特別針對早期行列輸入法的使用者所設計。本輸入法對照表是從\n「行列輸入法的家」網站（即行列輸入法官方網站）提供的 Windows 版行列輸入法（下載連結為\nhttp:\/\/www.array.com.tw\/BOX\/AR40NT_2K_XP.zip）轉置而來。\n\n\n本檔案和行列輸入法規格書不同之處：\n\n鍵位在螢幕上的表示方式。因 Mac OS X 並未採用倚天中文的做法，將行列輸入法的鍵位符號\n編入其中文字集內，故在此除了借用「行列30」的下箭頭 (⇣) 代表第 7, 8, 9, 0 列、上箭頭 (⇡)\n代表第 1, 2 列之外，另以「⌅」符號代表 3, 4, 5, 6 列。\n\n版本說明：\n0.11 第一版\n0.15 新增支援標點符號輸入\n\n註：本輸入法僅支援 Big-5 範圍的正體中文字集；筆者並無加入支援 Unicode 字集的計畫。如果\n「支援 Unicode 字集」對您很重要，強烈建議您改用「行列30」輸入法。最後以官方網站的一段\n話，做為說明文字的結尾：「此專為舊版行列40鍵版使用者服務，希望40鍵版的使用者，最好還\n是改用新版的行列30輸入法才是上策」。\n\n\n"},{"ename":"Biaoyin","cname":"表音","name":"","cin":"table\/biaoyin.cin","db":"db\/biaoyin.cin.db","license":"Version 2.3, November 2007\nEric Rasmussen <hello.rasmus@gmail.com>\nCovers Pinyin, MPS-2, Yale\nOmits ê\nSpecial thanks to OpenVanilla.org for converting the data table\n\n"},{"ename":"PhoneticHsu","cname":"注音-許氏鍵盤","name":"","cin":"table\/bpmf-Hsu.cin","db":"db\/bpmf-Hsu.cin.db","license":""},{"ename":"Phonetic","cname":"注音","name":"","cin":"table\/bpmf-ext.cin","db":"db\/bpmf-ext.cin.db","license":"Revise by opendesktop.org.tw's phone.cin to include CNS11643 and Unicode\ncompatible characters.\nAlso adjust some punctuations.\nLicense：Public Domain\n\n"},{"ename":"Phonetic","cname":"注音","name":"","cin":"table\/bpmf.cin","db":"db\/bpmf.cin.db","license":""},{"ename":"Cangjie6","cname":"倉頡六代","name":"","cin":"table\/cangjie6.cin","db":"db\/cangjie6.cin.db","license":"此碼表依 rime-cangjie6 v0.31 轉換為 cin 格式 2018-01-16\n\n\n單字碼表自百度貼吧「倉頡」吧網友风易辞得\n又：\n蒼頡六代構詞碼碼表\n由雪齋、惜緣整理於 2013-01-29\ncrazy4u根据雪齋發佈的碼表增二萬餘字 2013-02-19\ncrazy4u增易經八卦符號 2013-03-26\n單字編碼兼顧宋體、細明體字形 crazy4u 2013-04-02\n又增一千字 crazy4u 2013-04-27\n增加組詞分隔符、正體字字頻 雪齋 2013-05-30\n採用相對字頻 雪齋 2013-12-09\n增加擴展E區字 雪齋 2014-11-03\n\n本字表收中日韓越統一表意文字及其擴展A、B、C、D、E區另加相容表意文字區之12箇獨立字、相容表意文字擴充區28箇獨立字。\n取碼依宋體及明體。另：擴展B區有三個重複收錄字，本表錄之，但加「」註。\n\n\nLicense: GPL\n\n"},{"ename":"CangJie (Large Character Set)","cname":"倉頡（大字集）","name":"","cin":"table\/cj-ext.cin","db":"db\/cj-ext.cin.db","license":"CangJie (often mis-Romanized as Changjei) input method table\ntweaked by b6s for OVIMGeneric(SQLite) in UTF-8 encoding.\n\nThis table also extended to include HKSCS encodings. For details, see\nhttp:\/\/www.info.gov.hk\/digital21\/chi\/hkscs\/index.html\n\nNow this table is supplied by CNS11643 to have around 70,000 Chinese\ncharacters. This work is based on opendesktop.org.tw's cj.cin file and\nmerged by yylin and b6s.\n\n","tcname":"倉頡（大字集）","scname":"仓颉（大字集）"},{"ename":"Cangjie-J","cname":"倉頡-J","name":"","cin":"table\/cj-j.cin","db":"db\/cj-j.cin.db","license":"ChangJei input method table for UTF-8 encoding.\n\nThis table also extended to include HKSCS encodings. For details, see\nhttp:\/\/www.info.gov.hk\/digital21\/chi\/hkscs\/index.html\n\nPunctuations modified by Janus Ng on Dec 30, 2004\n\n"},{"ename":"CangJie (with wildcard support)","cname":"倉頡（萬用字元版）","name":"","cin":"table\/cj-wildcard.cin","db":"db\/cj-wildcard.cin.db","license":"CangJie input method table tweaked by b6s for OVIMGeneric(SQLite) in UTF-8 encoding.\n\nThis table also extended to include HKSCS encodings. For details, see\nhttp:\/\/www.info.gov.hk\/digital21\/chi\/hkscs\/index.html\n\n\n","tcname":"倉頡（萬用字元版）","scname":"繁体仓颉（万用字元版）"},{"ename":"CangJie","cname":"倉頡","name":"","cin":"table\/cj.cin","db":"db\/cj.cin.db","license":"CangJie input method table tweaked by b6s for OVIMGeneric(SQLite) in UTF-8 encoding.\n\nThis table also extended to include HKSCS encodings. For details, see\nhttp:\/\/www.info.gov.hk\/digital21\/chi\/hkscs\/index.html\n\n\n","tcname":"倉頡","scname":"繁体仓颉"},{"ename":"Cangjie-5","cname":"倉頡五代","name":"","cin":"table\/cj5.cin","db":"db\/cj5.cin.db","license":"ChangJei input method table for UTF-8 encoding.\n\nConverted from http:\/\/www.cbflabs.com\/tec.htm\nby Janus Ng on Dec 30, 2004\n\n"},{"ename":"Corners","cname":"四角號碼","name":"","cin":"table\/corner.cin","db":"db\/corner.cin.db","license":""},{"ename":"daibuun","cname":"普實台文","name":"","cin":"table\/daibuun.cin","db":"db\/daibuun.cin.db","license":"普實台文輸入法 1.0 版\n趙惟倫 <chaoweilun@pcmail.com.tw> GPL 2004.5\n修改自 daibuun.tit (趙惟倫1997.10)\n根據普實台文 <http:\/\/www.taconet.com.tw\/hioong\/>\n"},{"ename":"Dayi3","cname":"大易(標點符號版)","name":"","cin":"table\/dayi3-patched.cin","db":"db\/dayi3-patched.cin.db","license":"本表格由太易資訊公司 (http:\/\/www.dayi.com) 授權，開放給使用者下載使用。\n\n使用者不得任意更改此表格中每個字的編碼規則並重新散佈，但允許改變此表格\n的格式以適合其他平台或輸入法軟體使用。\n\nlast modified: 2005-01-14\n加入一批標點符號和一個新的 keyname (' 標)\n改變二鍵輸入時的一些常用字選字順序：\n也道爸就像身假流遠應漢蘭動崗亂病碗獅據遊眾萬灣愈淨管舒陽制夢\n\n"},{"ename":"Dayi3","cname":"大易","name":"","cin":"table\/dayi3.cin","db":"db\/dayi3.cin.db","license":"本表格由太易資訊公司 (http:\/\/www.dayi.com) 授權，開放給使用者下載使用。\n\n使用者不得任意更改此表格中每個字的編碼規則並重新散佈，但允許改變此表格\n的格式以適合其他平台或輸入法軟體使用。\n\n","tcname":"大易","scname":"繁体大易"},{"ename":"Symbols and Kanas (Iroha)","cname":"漁村符號及日文假名","name":"","cin":"table\/ehq-symbols.cin","db":"db\/ehq-symbols.cin.db","license":"ehq-symbols.cin: EHQ-Symbol (named Unicode symbols) and Japanese Kanas\n\nThis data table is combined from ehq.cin and iroha.cin\n\nehq.cin 2004-2008 By Weizhong Yang\nTable data is Zonble-ware and adopts Zonble's License\n-- \"How could a person who doesn't even believe in law adopt any license?\"\n\niroha.cin 2004-2008 By momizi\nTable data derived from japan.box, a table that existed long time ago\nin a galaxy far far away. Table data collected in December 2004.\n\n","tcname":"漁村符號及日文假名","scname":"渔村符号及日文假名"},{"ename":"ezArray10","cname":"懶人行列10","name":"","cin":"table\/ezArray10.cin","db":"db\/ezArray10.cin.db","license":"﻿ 《懶人行列10》的對照表修改自傳統30鍵的《行列30》，適用於LimeHD所提供的數字鍵盤。\n《懶人行列10》對照表的設計原則不追求「精準」的低重碼率——這部份交由LimeHD來負責，反倒是設法保留傳統30鍵行列輸入法中的打字習慣，以期降低過渡到10鍵數字鍵盤時的門檻；換句話說，就是花最少的心思，便能在最短的時間內上手《懶人行列10》。\n\n☉《懶人行列10》載點：\n「候選列版」：http:\/\/bit.ly\/2Gx2Sme\n「空白鍵版」：http:\/\/bit.ly\/2EiPImN\n\n版本說明：\n兩種版本分別對應於LimeHD的兩種上字方式：「在候選列上取上字」與「按空白鍵上字」。因此，\n\n「候選列版」：\n上字的方式為「在候選列上直接點選」，可不用打出完整的編碼即可上字。對照表檔案較小，若手機較舊或陽春，建議使用此版本，打字的體驗會較為流暢。\n\n「空白鍵版」：\n除了在候選列上選取上字外，也能使用空白鍵來上字。其對照表經過設計，使一個字打到一半，即有機會使用空白鍵上字（條件為想打的字已在候選列上並被反白）。缺點為對照表經過設計後，檔案較大，故在低階或舊手機上使用起來略顯不順。（我的手機是Zenfone 4，使用起來是沒什麼問題，但拿年邁的Infocus M810來測試，就略顯卡頓了。個人的感覺是，如果是在手機上的跑Chrome瀏覽器，用起來很順，那麼就可以下載「空白鍵版」；反之，或是沒有用空白鍵上字的習慣，那用「候選列版」就夠了。）\n\n☉《懶人行列10》使用說明：\n\n以「發」字為例：\n\n《行列30》碼為「5下 5上 5中 5下」,\n《懶人行列10》則改為「5555.下上中下」，\n\n即：\n1. 先打完所有字根的「數字」部份，\n2. 加一點「.」，表示數字部份已結束，\n3. 然後再補上每個字根的「上、中、下」部份。\n\n但因數字鍵盤上沒有「上、中、下」的鍵位，於是《懶人行列10》改用數字鍵「3、6、9」代替之，故「發」完整編碼即為「5555.9369」。\n\n而根據LimeHD的設計，若在鍵入編碼的過程中，想打的字已經非現在候選列上，即可選取上字，不用打出完整的編碼。（適用於「候選列版」與「空白鍵版」）\n但若習慣按下空白的上字，則需使想打的字「排進候選列上第一位、並被反白」。而要達成這個條件，至少需鍵入所有的「數字部份」；爾後在鍵入「.」與「上、中、下」的過程中，若想打的字已被反白，即可按下空白鍵上字，不用打出完整的編碼（僅適用於「空白鍵版」）。\n\n於是，以「發，5555.9369」為例，在「候選列版」中，以下打字過程中的任一步，都是可「在候選列上選取上字」的情形：\n5\n55\n555\n5555\n5555.\n5555.9\n5555.93\n5555.936\n5555.9369\n\n而在「空白鍵版」中，以下打字過程中的任一步都是僅能「在候選列上選取上字」的情形：\n5\n55\n555\n\n以下打字過程中的任一步，都是除了能「在候選列上選取上字」之外，亦能「按下空白鍵上字」的情形：\n5555\n5555.\n5555.9\n5555.93\n5555.936\n5555.9369\n\n☉標點符號\n\n至於標點符號方面，《懶人行列10》有四種鍵入標點符號的方法。\n\n第一種為原《行列30》中，以英文標點為鍵位的常用標點，如「，」、「。」、「？」、「：」與「；」等。《懶人行列10》沿用其鍵位，並將中上、中、下」分別改成「3、6、9」，則常用標點在《行列30》與《懶人行列10》中之編碼對照如下：\n\n「，」：《行列30》為8v，《懶人行列10》為89。\n「。」：《行列30》為9v，《懶人行列10》為99。\n「？」：《行列30》為0v，《懶人行列10》為09。\n「；」與「：」：《行列30》為0-，《懶人行列10》為06。\n\n第二種為原《行列30》中由「W」鍵所喚出來的符號表，並由數字鍵選取類別、「空白鍵」換頁。《懶人行列10》沿用該習慣，但配合數字鍵盤的按鍵配置，而將「W」與「空白鍵」都換成「,」。 舉例來說，上引號【「】為《行列30》標點符號表第二類、第三頁、第五個，其打法在\n\n《行列30》為「W 2 空白 空白 5」；而在\n《懶人行列10》則為「, 2 , , 5」，\n\n其中第一個「,」是做為喚出標點符號表之用，第二與第三個「,」則是用以切換頁面。\n這樣的好處是習慣與《行列30》相同，故不用再花時間尋找、記算與熟悉某個標點符號是放在第幾頁。\n\n第三種是《懶人行列10》的以形取碼：\n重要：一定要先打「.」，以喚出常用標點符號！\n《懶人行列10》依數字鍵盤的特性，為幾個常用的標點符號建立了相似形狀的編碼，分別為：\n\n橫書的上、下引號「」、『』：\n「.412」與「.698」，即數字鍵盤「左上角」與「右下角」的3個鍵，形狀與上、下引號相同。考量每個人的起筆順序不一，故只要是4、1、2與6、9、8的各種排列組合皆可打出引號，如「.412、.421、.214」等。\n\n橫書的上、下括號（）、【】、《》：\n「.248」與「.268」，即數字鍵盤上「向左凸」與「向右凸」的形狀，起筆都是由上向下，故只有248與268一種排列。\n\n以下尚有：\n逗點「，」：「.57」，5起筆，向左下撇向7；\n頓點「、」：「.59」，5起筆，向右下撇向9；\n句點「。」：「.5」，只有5一點；\n冒號「：」：「.28」；\n分號「；」：「.287」；\n驚探號「！」：「.250」；\n問號「？」：「.2380」。\n\n第四種則為前述以形取碼的簡碼：\n重要：一定要先打「.」，以喚出常用標點符號！\n「引號、括號」類只需打起筆，如：\n「.2」：上、下括號（）【】《》\n「.24」：上括號（《【\n「.26」：下括號）》】\n「.4」：上引號「\n「.6」：下引號」\n\n「標點」類只需打末筆，如：\n「.5」：句號「。」，或按鍵「.」。\n「.7」：逗號「，」，或按鍵「.」。\n「.7」：分號；\n「.9」：頓號、\n「.8」：冒號：\n「.0」：驚探號！\n「.0」：問號？\n\n以上，即為《懶人行列10》的使用說明。\n\n☉至於說為何要使用《懶人行列10》？\n\n若與30鍵的《行列30》相比，《行列30》在手機上所使用的鍵盤實在太小，小到經常手殘錯鍵；而錯鍵的頻率還會隨著打字速度的檢增加而提升。此外，錯鍵久了，似乎還會誤導LimeHD的「自建關聯字」與「選取排序」功能，將這些錯誤建到詞庫與常用字中，繼而造成打字時的困擾。\n《懶人行列10》則因只使用10鍵的數字鍵盤，按鍵大小遠優於《行列30》。個人的經驗是可大幅改善錯鍵的問題，尤其是在數字鍵盤熟悉後，那大到很難按錯的按鍵，幾乎可以讓打字達到「盲打」的程度，而這在其他虛擬鍵盤上，基本上都是不可能做到的動作。\n\n至於在同樣使用10鍵數字鍵盤做為輸入媒介的行列輸入法（下簡稱為《數字行列》好了）方面，個人於Google Play上找到的版本共有老刀先生的《行列10》（內建在LimeHD與gcin中）、《行列注音輸入法》裡的「行列簡易」、「行列滑動」與《行列輸入法--字根提示版》。\n這些數字鍵盤版的行列輸入法，不約而同地都將一個字根的鍵位拆成2鍵，例如字根「女，2^」在《行列30》的鍵位為「W」，在各《數字行列》中則拆解為首碼的數字部份「2」，與次碼的上中下部份「^」。至於各版本《數字行列》間的的差別，則在於大家對次碼的處理方式有所不同，繼而直接影響了打字速度的快慢。\n\n《行列10》將次碼從「上、中、下」還原成0到9的筆劃碼，故需花時間重練次碼，且在熟練前，打字速度快不起來。\n《行列注音輸入法》裡的「行列簡易」，保留了次碼的「上、中、下」，並配有專門的按鍵。沒有改變拆碼習慣，故容易上手。但一定要用2鍵來組成一個字根，導致打起字來過於累贅，拖慢打字速度。\n《行列注音輸入法》裡的「行列滑動」則是以手勢「上滑、按下、下滑」來代換次碼的「上、中、下」。但滑動手勢較於嚴苛，需滑動到正上方（或正下方）的按鍵上，才算完成上滑（或下滑）手勢，故誤判的機率不小。\n《行列輸入法--字根提示版》同樣將一個字根強迫用2鍵來組成，所以打字還是很慢；同時，次碼用1到4來表示「上」、5表示「中」、6到0表示「下」，沒有專屬的按鍵，故一個字根要用2次後退鍵才能刪除，也略有不便。\n\n追根究底，前述這四種《數字行列》共通的問題，都出在雖然一個字根已被拆成「首碼」與「次碼」2鍵，但打字時，這些《數字行列）卻仍舊繼承了傳統《行列30》以「一個字根」為鍵入單位的習慣；即一個字根的「首碼」與「次碼」都打完後，才能繼續鍵入下一個字的「首碼」與「次碼」。\n然而「次碼」是僅在《數字行列》中才有的鍵位，無論是由筆劃碼、滑動手勢、專用按鍵或借用數字鍵來實作，總是得花時間練習與熟悉的。這增添了上手的難度，其次，也拖慢了熟練後的打字速度。\n\n所以，回到為什麼要用《懶人行列10》這個問題。\n有鑑於次碼需要花時間練習，且練成後，依舊會拖慢打字速度。故《懶人行列10》乾脆不理會「次碼」，先將數字部份的首碼都先打完。如果此時已可上字，便直接在候選列上選、或按下空白鍵上字。如此一來，就能不用再去思索次碼究竟為何了。這不僅可有效縮短輸入法上手所需的時間，同時也加快了熟練後的打字速度。\n至於說首碼的數字部份打完了，卻無法上字，才要依序加「.」與「上、中、下部份」。然而因為LimeHD擁有「排序選取」功能，所以通常不用將編碼打完，想要打的字即會出現在候選列上，故可顯著地減少次碼鍵入的次數。\n\n這個減少次碼鍵入次數的效果是相當顯著的，以「晶（0^ 0^ 0^）」為例，《懶人行列10》的編碼為「000.333（000.上上上）」。假設LimeHD可以在只鍵入4鍵的「000.」時，便能猜出我們要打的字是「晶」（「.」也算作1鍵），則我們連一個次碼都不用鍵入。\n反之，「晶」在《行列注音輸入法》之「行列簡易」中的編碼為「0上 0上 0上」。即便LimeHD也能在鍵入4鍵的「0上0上」時，就能猜出我們要打的字是「晶」，但這4鍵中，卻有2鍵為需要花時間提取的「上」。故可想而知，在能熟練地提取次碼之前，打字速度必然會拖慢很多。而這個問題在《行列10》中會更加嚴重，因為《行列10》的次碼需要重新轉換回10種筆劃碼。\n\n此外，先打首碼的數字部份，也有助於縮減撿字的範圍。以「秋」字為例，《懶人行列10》中，其完整編碼為「948.699」，在鍵到第4鍵的「948.」時，已然指定了這個字只有三個字根（ 只有三個首碼，第4鍵為分隔用的「.」），雖然符合這個條件的常用字，可能還有「無（948.339）」或「拱（948.336）」。\n然而比對「行列簡易」在「秋」字鍵入4鍵的「9單9下」過程中，其實只能確定這個字至少有兩個字根的「丿」與「木」，而符合這個條件的字可能還有同為「禾」部且擁有三個字根的「私」、「利」、「和」等、或是四個字根的「種」、「秩」、「稅」、「稍」等。由此可看出，《懶人行列10》的編碼設計，確實可以有效地篩檢出想要打的字。\n\n最後，《懶人行列10》因為使用「.」做為分隔，故編碼的視覺效果較佳。\n\n以「發」為例，其《懶人行列10》的編碼為\n「5555.9369」（5555.下上中下），\n在《行列10》則為\n「5851558」（58 51 5 58），\n或是在《行列輸入法--字根提示版》為\n「58525558」（5下5上5中5下）。\n\n三者相比，雖然《懶人行列10》的編碼長度較長，但更為一目了然，故一但發生錯鍵的情形，也較易看出錯鍵的位置。\n\n綜合上述，在直觀上，《懶人行列10》的上手難度較其他版本的《數字行列》低，且較易撿字，故可有效地提升打字速度。\n\n當然，以上《懶人行列10》的優點都只來自於我個人的使用經驗，因此，我計算了各版本《數字行列》的重碼率，以數據來說明上述《懶人行列10》的直觀經驗是否為真，或是僅為我個人的錯覺…。\n\n☉重碼計算：\n\n以下文長，目的只是要用數據來佐證《懶人行列10》是否真的那麼好用。\n為了達到這個目的，我分別計算了\n《行列30》、\n《行列10》、\n《懶人行列10》（下簡稱《懶人10》）、\n《行列注音輸入法》裡的「行列簡易」\n各種對照表的重碼率。其中《行列輸入法--字根提示版》與「行列簡易」的編碼方式相同，故兩者合併討論，並一同簡稱為《其他10》。\n\n分析的對照表來源方面，\n《行列10》與《行列30》的對照表下載自「行列輸入法的家」，\n《懶人10》的對照表修改自《行列30》的對照表，並刪除末碼為「I」的難撿字。\n《其他10》的對照表「同樣」修改自《行列30》的對照表，而非採用原App中內建的對照表。同時，末碼為「I」的難撿字亦刪除之。\n各版本的對照表皆以《懶人10》為準，移除《懶人10》中未收錄的字，故各版本《數字行列》用作分析的總字數大致相同。\n但不知為何，《行列10》的總字數較《懶人10》多了72個字，佔《懶人10》總字數2,7591字的0.26%，若把這些字全視為重碼字，則其重碼率約佔了0.19字。不過我後續的討論中，最多只會看到小數下第一位，所以這個差異可被忽略。\n\n而重碼的分析從兩方面著手：\n1. 「完整編碼」：\n每一個字都打出完整的編碼後才上字，如《行列30》最多4鍵，《行列10》最多8鍵，以此類推，並計算各編碼的重碼率。\n\n2. 「片段編碼」：\nLimeHD中，可以不用打出完整編碼，只要在鍵入編碼的過程中，想打的字已經出現在候選列上，便能選取上字。如「發」在《行列30》中的完整編碼為「BTGB」，但鍵入1鍵的「B」、2鍵「BT」與3鍵「BTG」時，「發」也可能會出現在候選列上，選取便可上字。當然，若鍵入3鍵的「BTG」時，「發」字出現在候選列上機率，必須遠高於僅鍵入1鍵的「B」，這是因為還有其他第一碼也為「B」的字，而且數量遠多於前三碼為「BTG」的字。換言之，就是只鍵入1鍵時的重碼率，遠高於鍵入3鍵時的重碼率。\n有鑑於此，「片段編碼」即為計算一個字在鍵入不同鍵數時的重碼率；重碼率越低，表示在打字的過程式，想要的字越容易出現在候選列上。\n\n說明完了兩種重碼率的差別之後，我們先來看「完整編碼」的重碼率分析結果：\n\n********以下為「完整編碼」的重碼率********\n\n《行列30》：\n最長取到四個字根，故其編碼最短為一碼，最長為四碼。\n一碼（64字\/27591字，0.23％） ：2.53字\n二碼（1114字\/27591字，4.04％） ：1.52字\n三碼（5898字\/27591字，21.38％） ：1.26字\n四碼（20515字\/27591字，74.35％） ：1.17字\n平均：1.21字\n\n《行列10》：\n一個字根拆分成一碼或二碼，故編碼長度為一至八碼。\n一碼（17字\/27633字，0.06％） ：2.53字\n二碼（119字\/27633字，0.43％） ：2.11字\n三碼（579字\/27633字，2.1％） ：1.9字\n四碼（2324字\/27633字，8.41％） ：1.62字\n五碼（5771字\/27633字，20.88％） ：1.36字\n六碼（9083字\/27633字，32.87％） ：1.19字\n七碼（7111字\/27633字，25.73％） ：1.1字\n八碼（2629字\/27633字，9.51％） ：1.08字\n平均：1.25字\n\n《懶人10》：\n一個字根拆分成兩碼，並加一個分隔用的「.」，故編碼長度為三碼、五碼、七碼、九碼。\n三碼（64字\/27591字，0.23％） ：2.53字\n五碼（1114字\/27591字，4.04％） ：1.52字\n七碼（5898字\/27591字，21.38％） ：1.26字\n九碼（20515字\/27591字，74.35％） ：1.17字\n平均：1.21字\n\n《其他10》：\n一個字根拆分成二碼，故編碼長度為二碼、四碼、六碼、八碼。\n二碼（64字\/27591字，0.23％） ：2.53字\n四碼（1114字\/27591字，4.04％） ：1.52字\n六碼（5898字\/27591字，21.38％） ：1.26字\n八碼（20515字\/27591字，74.35％） ：1.17字\n平均：1.21字\n\n其實《懶人10》與《其他10》的編碼規則都繼承於《行列30》，故其「完整編碼」都擁有相同的重碼率，唯一的差別僅在於編碼長度有所不同而已。\n《行列10》也是將字根拆成二碼，但卻將次碼的「上、中、下」還原成筆劃碼，本質上已異於《行列30》。但就其重碼率來看，與其他三者其實相去不遠。\n\n考量四者的重碼率不相上下，則唯一的差異便在於編碼的長度，即編碼長度越長，打速度越慢。\n以下為平均編碼長度之計算結果：\n《行列30》：3.70碼\n《行列10》：5.99碼\n《其他10》：7.40碼\n《懶人10》：8.40碼\n\n結果顯示，《行列30》最長只有四碼，但其實字數最多的也是四碼字，因此大量平均下來，仍需要3.7鍵才能打出一個字。《其他10》強迫將一個字根拆成二碼，故其平均碼長為《行列30》的兩倍；《懶人10》亦同，但多了一碼的「.」，故平均碼長又多了一碼。\n相較之下，《行列10》因為一個字根不一定會拆成兩碼，故多數文字的編碼長度落便在五碼到七碼這個區間中，使其平均碼長為5.99碼，是各版本《數字行列》中最短的；意即若要將一個字的編碼都打完才上字，《行列10》所需的按鍵次數最少。\n話雖如此，但用《行列10》打一個字，平均下來會比《行列30》多出兩鍵。長期下來，確實沒有《行列30》好用，至於《其他10》與表現最差的《懶人10》就更不用說了。\n\n所幸，虛擬鍵盤上都有候選列，鍵入編碼的過程中，會逐漸縮小的篩選範圍，並將想要打的字推上候選列。因此，絕大多數的情形都不用鍵入完整編碼，這有效地減少的了打字時的按鍵數量。\n\n因此，我們再來看「片段編碼」的重碼率分結果。\n\n********以下為「片段編碼」的重碼率********\n\n為簡化複雜度，以下的討論皆建立在「排序選列已『關閉』」的條件下，分析編碼的設計在沒有程式的協助下，是如何影響打字速度的。\n\n「片段編碼」意味著不要輸入完整的編碼，光憑編碼的片段，就足以將想要打的字推上候選列。於是我們可以想像，在沒有「排序選取」協助的條件下，鍵入一段編碼後，若擁有相同片段編碼的字越多，被推上候選列的字就越多，於是想要打的字被擠出候選列的機率便更高。這迫使我們多加1鍵，以篩選掉更多不相關的字，讓想要的字重新回到候選列上。\n舉例來說，若我想打的字是「X」好了，其完整編碼為「123456」。當然，我不會想把整段6鍵的編碼全都打出來，而是最好在只輪入到「123」時，「X」便已出現在候選列上，讓我可以選取上字；或是更好的，「X」是被排在候選列上第一位，並被反白，這樣我就可以直接按空白鍵上字了。\n然而當我去看候選列時，發現那裡排在最前頭的不是「X」，而是完整編碼只有三碼\n「123」的「A」，\n\n然後是四碼\n「1231」的「B」、\n「1232」的「C」、\n「1233」的「D」、\n…\n……\n\n再來是五碼\n「12337」的「I」、\n「12338」的「J」、\n「12339」的「K」、\n…\n……\n\n即便已經看到六碼字了，也可能是\n「123397」的「M」、\n「123398」的「N」、\n「123399」的「O」、\n…\n……\n\n最後才是「123456」的「X」。\n\n因此，我們可以說A、B、C、D、I、J、L、M、N、O這些字，都是「X」在「3鍵（123）」時的重碼字。\n\n當然，\n七碼「1234567」的「Y」或\n八碼「12345678」的「Z」，\n其前3鍵也是「123」，只是七、八碼字理論上都排在六碼字「X」後面。而既然我都已經看「X」了，自然也不用去看後面七、八碼字就是了。\n\n不過A、B、C、D、I、J、L、M、N、O這麼多的字排在「X」前面，必然會使得「X」被擠出候選列，或至少要展開候選列才能找到「X」。這麼做非常不便，於是較佳的辦法就是多加1鍵成為「1234」，這樣便能篩掉這些重碼字，提升「X」的排位。\n\n但最理想的結果應該編碼經過設計後，讓只鍵入「123」時，便能篩掉A、B、C、D、I、J、L、M、N、O這些字；或退而求其次，至少只在候選列上留下A、I、M、「X」，也應該算是可接受的結果了。畢竟，這意味著在所有的文字中，只有四個字的前三碼都是「123」；或是說，「X」的3鍵重碼率只有四個字，少到足以讓我們在候選列上一眼就找到「X」，然後便\n能選取上字。\n\n由此可知，若能用越短的編碼片段來得到越少的重碼字數，則打起字來便越省時省力。於是「編碼片段」的重碼率，其目的即為評估不同編碼邏輯下的打字效率。換言之，就是鍵入一段編碼後，會在候選列放上多少字； 重碼越少，想打的字放得越前面，打字效率便越高。\n\n而在實質進入「片段編碼」的討論前，仍有一長串的名詞與計算方式需先行說明：\n\n1. 編碼：\n一個文字在輸入法裡所擁有的編碼。各家的定義各有不同，以最基本的《行列30》為例，其編碼格式為：\n\n《行列30》：字根1 [字根2] [字根3] [字根4]，\n\n其中刮號「[]」的意思是該碼可省，如「三」字的編碼為「AAA（1- 1- 1-）」，只有用到「字根1」到「字根3」，「字根4」並未使用。以「發，5v 5^ 5- 5v（5下 5上 5中 5下）」為例，其《行列30》的完整編碼為「BTGB」。\n\n《行列10》則將《行列30》裡的「一個字根」拆解成兩個部份，字根前半的數字部份保留為數字的「首碼」，後半的上下部份則還原成同為數字的「次碼」；以字根「手，9^」為例，首碼為「9」，次碼則為「^，上」還原的「4」。若字根的次碼為「-，單」，則不加次碼，如字根「一，1-」的首碼為「1」，沒有次碼。\n最後依字根順序安排「首碼」與「次碼」，其編碼格式為：\n\n《行列10》：【首碼1 [次碼1]】【[首碼2] [次碼2]】【[首碼3] [次碼3]】【[首碼4] [次碼4]】\n\n其中括號「【】」的意思，為括號內的編碼是以字根所組成一組。以「發，5v 5^ 5- 5v（5下 5上 5中 5下）」為例，其《行列10》的完整編碼為「58 51 5 58」。\n\n《懶人行列10》（下簡稱《懶人10》）也是將《行列30》裡的字根拆成數字與上下兩個部份，但與《行列10》不同的是，後半的上下部份並未還原成數字，仍是保留為上、中或下；其次，數字部份的「首碼」優先編排在前半段，「上下」部份則排在後半段，兩個部份以「.」相隔。故其完整的編碼格式為：\n\n《懶人10》：首碼1 [首碼2] [首碼3] [首碼4] [點] [上下1] [上下2] [上下3] [上下4]\n\n以「發，5v 5^ 5- 5v（5下 5上 5中 5下）」為例，其《懶人10》的完整編碼為「5555.9369（5555.下上中下）」。\n\n《其他10》）則與《懶人10》相同，保留次碼為「上、中、下」的形式，但與《行列10》一樣，是以「首碼」與「上下」連在一起來表示一個字根。其完整的編碼格式為：\n\n《其他10》：【首碼1 上下1】【[首碼2] [上下2]】【[首碼3] [上下3]】【[首碼4] [上下4]】\n\n以「發，5v 5^ 5- 5v（5下 5上 5中 5下）」為例，其《其他10》的完整編碼為「5下 5上 5中 5下」。\n\n2. n根字：\n在傳統的《行列30》中，最多以四個字根組成一個字，故本文以《行列30》為基礎，使用n個字根組成的編碼，該字即為n根字，如「人，8-」為一根字，「去，4^ 2v」為二根字，以此類推。\n\n3. m碼字：\n文字在程輸入法中的完整編碼長度。\n《行列30》中，一根字的編碼長度為一碼，如「一，1-」的編碼為一碼的「A」，二根\n字為二碼，以此類推。\n\n《懶人10》將《行列30》的1鍵拆成「首碼」與「上下」兩部份，並先排完首碼後才排上下，中間再用「.」來分隔，故其完整編碼長度是《行列30》的兩倍加1。因此，《行列30》的一根字至四根字對應到《懶人10》中，分別為：\n一根字：三碼，\n二根字：五碼，\n三根字：七碼，\n四根字：九碼。\n\n《其他10》亦同，只是少了「.」，故一到四根字的編碼長度分別為：\n\n一根字：二碼，\n二根字：四碼，\n三根字：六碼，\n四根字：八碼。\n\n《行列10》也是將《行列30》的字根拆成「首碼」與「次碼」兩碼，且沒有其分隔符號，故完整編碼長度最長為《行列30》的兩倍。如「晶（0^ 0^ 0^，三根字）」的《行列10》完整編碼為「010101」，共六碼。\n然而《行列10》也有僅單碼的字根，如「口，（1-）」。這類字根不需要鍵入次碼，故由單碼字根組成的字，其完整編碼長度也可與《行列30》相同。如「品（0- 0- 0-，三根字）」的《行列10》完整編碼則為同樣3碼的「000」。\n因此，《行列30》的一根字至四根字對應到《行列10》中，分別為：\n一根字：一碼到二碼，\n二根字：二碼到四碼，\n三根字：三碼到六碼，\n四根字：四碼到八碼。\n\n4. k鍵：\n在打字的過程中（即鍵入完整編碼的過程中）鍵入了幾鍵，繼而得到一段編碼，這段編碼可以是完整編碼，也可以不是，以3鍵為例：\n\n《行列30》中，「發，5v 5^ 5- 5v，BTGB」的3鍵編碼片段為「BTG（5v 5^ 5-）」。\n\n《懶人10》中，「發」的完整編碼為「5555.9369」，3鍵時的編碼片段為「555」\n\n《其他10》中，「發」的完整編碼為「5下5上5中5下」，3鍵時的編碼片段為「5下5」。\n\n《行列10》中，「發」的完整編碼為「5851558」，3鍵時的編碼片段為「585」\n\n5. 撿字邏輯：\n輸入法程式的撿字規則，本文為以LimeHD為例，並「關閉」其「排序選取」功能，以簡化討論過程。\n在此情形下，就本人不專業的觀察，LimeHD應該以下述的邏輯來撿字：\n\n以鍵入「123」3鍵編碼為例，會先將編碼同為「123」的三碼字列放上候選列，其次為前3碼是「123x」的四碼字，再其次為前3碼是「123xy」的五碼字，以此類推；\n若沒有編碼同為「123」的三碼字，則優先在候選列放前3碼為「123x」的四碼字，再其次為前3碼為「123xy」的五碼字，以此類推。\n\n6. 撿字範圍：\n當鍵入k鍵的編碼片段後，有哪些字會被放到候選列上。\n依前述撿字邏輯，當鍵入k鍵的編碼時，k碼字會優先放上候選列，其次是k+1碼字，再其次是k+2碼字，以此類推。\n然而當我們想要打的是n根字（最大編碼長度m鍵），故m+1碼字雖然也被排進候選列上，但是被放在m碼字之後，所以本文將其視為選字範圍。\n因此，在打一個m碼字的過程中鍵入了k鍵，則其撿字範圍即為k到m碼字。\n\n舉例來說，以在《行列30》中要打一個三根字，並已鍵入了2鍵為例，其撿字範圍之篩選如下：\n一碼字：排除。因為鍵入2鍵，超過一碼字的編碼長度；\n二碼字：是，且是二根字；\n三碼字：是，且是三根字；\n四碼字：排除。因為一但找到三碼字後，就不會再往後找四碼字了。\n因此，綜合上述，三根字2鍵時的撿字範圍應為：二碼字到三碼字的「二根字、三根字」。\n以此類推，三根字3鍵的撿字範圍即為「三根字」。\n\n《其他10》因一個字根拆成二碼，故情況略為複雜。\n舉例來說，以在《其他10》中要打一個三根字，並已鍵入了2鍵為例，其撿字範圍之篩選如下：\n一碼字：排除，因《其他10》中沒有一碼字。\n二碼字：是，且是一根字（二碼合成一根）；\n三碼字：是，但《其他10》中沒有三碼字；\n四碼字：是，且是二根字；\n五碼字：是，但《其他10》中沒有五碼字；\n六碼字：是，且是三根字；\n七碼字以上：排除。因為一但找到六碼字後，就不用再往後找七、八碼字了。\n因此，綜合上述，可知在《其他10》中三根字2鍵時的撿字範圍：二碼字到六碼字的「一根字、二根字、三根字」。\n\n以此類推，三根字3鍵時，其撿字範圍之篩選如下：\n二碼字：排除。因為鍵入3鍵，超過二碼字的編碼長度；\n三碼字：是，但《其他10》中沒有三碼字；\n四碼字：是，且是二根字；\n五碼字：是，但《其他10》中沒有五碼字；\n六碼字：是，且是三根字；\n七碼字以上：排除。因為一但找到六碼字後，就不用再往後找七、八碼字了。\n因此，綜合上述，可知在《其他10》中，三根字3鍵的撿字範圍：三碼字到六碼字的「二根字、三根字」。\n\n《行列10》因一個字根可拆成二碼，但也可拆成一碼，故狀況更為複雜。\n以在《行列10》中要打一個三根字，並已鍵入了2鍵為例，其撿字範圍之篩選如下：\n一碼字：排除。因為鍵入2鍵，超過一碼字的編碼長度；\n二碼字：是，且可能是一根字或二根字；\n三碼字：是，且可能是二根字或三根字；\n四碼字：是，且可能是二根字、三根字或四根字；\n五碼字：是，且可能是三根字或四根字；\n六碼字：是，且可能是三根字或四根字；\n七碼字以上：排除。因為一但找到六碼字後，就不用再往後找七、八碼字了。\n而上述未被排除的字，即二碼字到六碼字，全是《行列10》中三根字在鍵入2鍵時的撿字範圍。\n\n承上例，再加一鍵成為三根字3鍵時，其撿字範圍之篩選如下：\n二碼字以下：排除。因為鍵入3鍵，超過二碼字的編碼長度；\n三碼字：是，且可能是二根字或三根字；\n四碼字：是，且可能是二根字到四根字；\n五碼字：是，且可能是三根字或四根字；\n六碼字：是，且可能是三根字或四根字；\n七碼字以上：排除。因為一但找到六碼字後，就不用再往後找七、八碼字了。\n而上述未被排除的字，即三碼字到六碼字，全是《行列10》中三根字在鍵入3鍵時的撿字範圍。\n\n最後，《懶人10》因n根字的前n碼，每一碼都對應到一個字根，故撿字範圍相對容易很多。\n舉例來說，以在《懶入10》中要打一個三根字，並已鍵入了2鍵為例，由於要打的是三根字，而三根字的前三碼皆為數字，故「鍵入的2鍵也必為數字」，因此，此時的撿字範圍之篩選如下：\n一根字：排除，因為一根字的第二碼是「.」，而非數字；\n二根字：是，因為二根字的前二碼皆為數字；\n三根字：是，因為三根字的前二碼皆為數字；\n四根字：排除。因為一但找到三根字後，就不用再往後找四根字了。\n因此，綜合上述，可知在《懶人10》中，三根字2鍵的撿字範圍即為「二根字、三根字」。\n\n以此類推，三根字3鍵時，因3鍵全為數字，故其撿字範圍之篩選如下：\n一根字：排除，因為一根字的第二碼是「.」，而非數字；\n二根字：排除，因為二根字的第三碼是「.」，而非數字；\n三根字：是，因為三根字的前三碼皆為數字；\n四根字：排除。因為一但找到三根字後，就不會再往後找四根字了。\n因此，綜合上述，可知在《懶人10》中，三根字3鍵的撿字範圍即為「三根字」。\n\n若再加1鍵，成為三根字4鍵時，因三根字的前3鍵為數字，且第4鍵為「.」，故其撿字範圍的篩選如下：\n一根字：排除，因為一根字的第二碼是「.」，而非數字；\n二根字：排除，因為二根字的第三碼是「.」，而非數字；\n三根字：是，因為三根字的前三碼皆為數字，且第四碼為「.」；\n四根字：排除。因為四根字的第四碼為數字，而非「.」。\n因此，綜合上述，可知在《懶人10》中，三根字4鍵的撿字範圍仍維持為「三根字」。\n\n由前述四種版本行列輸入法的撿字範圍分析可知，《懶人10》撿字範圍的縮減速度與《行列30》相同，並優於《行列10》與《其他10》。\n由於編碼的組合數量是有限的，故若撿字範圍裡的字數越少，則重碼的可能性便越低。\n\n7. 於是，最後，撿字精度：\n計算的方式則為將三種《數字行列》與《行列30》的對照表用google試算表來分析，計算一根到四根字在鍵入不同長度編碼時的重碼數量，即每1鍵可撿出多少擁有相同編碼片段的字。\n\n但為了節省計算量，本文僅就二根字、三根字與四根字，分別計算n根字n鍵、n根字n+1鍵、n根字n+2鍵三種鍵數時的撿字範圍。其原因是《懶人10》在n根字鍵入n鍵時，剛好將前半段數字部份的「首碼」打完。第n+1鍵統一為「.」，第n+2鍵則皆為第一個「上下」碼。\n以四根字（n=4）的「發」為例，完整編碼為「5555.9369」，\n鍵入第4鍵（n）時是全部的數字部份「5555」，\n第5鍵（n+1）是「5555.」的「.」，\n第6鍵（n+2）則是「5555.9」的第一個上下碼「9」。\n\n而重碼率的計算結果如下所述：\n\n******** 以下為重碼率的計算結果（單位：字） ********\n\n首先，先來看傳統《行列30》的重碼率：\n二根字2鍵：1.5，理論值：1.2\n三根字3鍵：1.3，理論值：0.2\n四根字4鍵：1.2，理論值：0.02\n\n其中，理論值的意思是若n根字「平均」分散到每個編碼時，每個不重覆的編碼可以分到幾個字。舉例來說，《行列30》裡有5898個三根字，完整編碼為3鍵。由於每鍵有30種編碼選擇（0到9分別各有上、中、下），故3鍵可提供2,7000種編碼組合。將5898個字平均散入2,7000個不重覆的編碼中，平均每個編碼只會分到0.2個字。意思是，理論上三根字的編碼可以塞進所有的三根字還有剩，因此不會有重碼的問題。\n但事實上不是這樣，由計算結果可知，三根字的平均重碼率為1.3字，雖然說這樣重碼率意味著多數的字都對應到不同的編碼，也就是幾乎沒有重根了。但因實際值比理論值高了快10倍，顯示中文字的結構並沒有那麼隨機，而這也會為10鍵數字鍵盤版的行列輸入法帶來問題…。\n\n以下為各版本《數字行列》的重碼率分析結果：\n注：不含一根字（64字\/27591字，0.23％），僅計算二、三、四根字（2,7527字\/2,7591字，97.7％）。\n\n二根字（1114字\/2,7915字，4.04％）\n2鍵：懶11.4，行46.7，其40.2\n3鍵：懶11.4，行 5.0，其 4.1\n4鍵：懶 4.1，行 1.7，其 1.5\n\n三根字 （5898字\/2,7591字，21.38％）\n3鍵：懶8.5，行59.8，其29.1\n4鍵：懶8.5，行 9.7，其11.3\n5鍵：懶3.5，行 1.2，其 1.9\n\n四根字 （2,0515字\/2,7591字，74.35％）\n4鍵：懶5.1，行24.9，其73.1\n5鍵：懶5.1，行 4.8，其10.7\n6鍵：懶2.7，行 1.9，其 5.9\n\n☆n根字n鍵時：\n當n根字鍵入n鍵時（以《行列30》來說，就是打完n根字的編碼；以《懶人10》來說，則是打完數字部份的首碼），由數據可看出，《懶人10》的重碼率最少。\n\n至於說這樣的重碼率是好是壞，可以從這個標準來判斷：重碼率可看做「平均下來，在鍵入一段編碼後，候選列上會顯示幾個字。」以我的手機為例，在系統的字型字體設定下，LimeHD的候選列上可以放進7個字。因此，重碼率超過7字時，就代表有些字可能擠不進候選列，需要展開候選列才能找到。這個動作很麻煩，而且也會嚴重拖慢打字速度，並干擾撰文時的思緒。故此，我會希望重碼率不要超過7字。\n由這個標準來看，《懶人10》在僅打完數字部份（即n根字n鍵，如「發」的5555），其重碼率其實差強人異：二根字2鍵與三根字3鍵時，都無法在候選列上擠進全部的字，直到四根字4鍵時才行。\n不過話說回來，候選字似乎會優先排進常用字，因此真要展開候選列的情況實際上並不常見。\n（這部份不是我的專業，也沒有研究，就我的觀察，那似乎和對照表裡的排序有關…。而我在《懶人10》中用的是「行列輸入法的家」所提供的《行列30》對照表，且建立《懶人10》的編碼時，並沒有改變對照表的排序。）\n\n《行列10》與《其他10》在n根字n鍵時的表現則相對差很多，其第一個原因即在於前文所述的「中文字的結構並沒有那麼隨機」。\n簡言之，就是「部首」，如「言」部，在《行列10》與《其他10》都要用到2鍵，分別為「60」與「6上」；「禾」部則為「948」與「9單4下」；尤有甚者，「魚」部是「7488」與「7上8下」。由於需要用到2鍵、3鍵、乃至於4鍵才能處理一根或二根的部首，相對於《懶人10》僅需用1鍵或2鍵，《懶人10》的撿字效率自然好很多。\n\n第二個原因則是《行列10》與《其他10》的撿字範圍大上很多，如「撿字範圍」一節中提及的，三根字3鍵的撿字範圍在\n《行列10》中為：「三碼二根字、三碼三根字、四碼二根字、四碼三根字、四碼四根字、五碼三根字、五碼四根字、六碼三根字、六碼四根字」；\n《其他10》中為：「二根字、三根字」；\n《懶人10》則為：「三根字」。\n\n第三個原因則是編碼的組合數量：在相同的撿字範圍中，編碼組合數量越少，重碼率便越高。如前述三根字3鍵的例子，3鍵時的編碼分別為：\n《行列10》的「首碼1 次碼1 首碼2」；\n《其他10》的「首碼1 上下1 首碼2」；與\n《懶人10》的「首碼1 首碼2 首碼3」。\n其中「首碼」與「次碼」都可提供「0到9」10種組合，「上下」則為「上、中、下」三種。故知，三根字3鍵時的編碼組合數量分別為：\n《行列10》的1000種（10×10×10）；\n《其他10》的300種（10×3×10）；與\n《懶人10》的1000種（10×10×10）。\n由此可看出《行列10》的編碼組合數量其實是與《懶人10》相當的，而《其他10》則明顯少於其他兩者。\n\n綜合上述三個原因，即可知在「三根字3鍵」的條件下，《行列10》擁有最多的撿字範圍、《其他10》擁有最少的編碼組合，但兩者都用最多的鍵數來處理「部首」，故可推論在n根字n鍵時的表現遠不如《懶人10》。\n\n☆n根字n+1鍵時：\n第n+1鍵在《懶人10》中為「.」，僅做為分別數字部份與上下部份之用，沒有提供額外的編碼組和與撿字能力，故第n+1鍵時的重碼率與n鍵時相同，並未提升撿字精度。\n話雖如此，但就數據來看，即便只是加點，《懶人10》在三根字4鍵與四根字5鍵的撿字精度仍與《行列10》相去不遠，並優於《其他10》，僅二根字3鍵的重碼率遠劣於其他兩者。\n\n☆n根字n+2鍵\n在《懶人10》中，第n+2鍵是「上下」部份的第一碼。\n二根字4鍵中，《行列10》與《其他10》已將編碼鍵入完畢，故其重碼率即為最終值。其中《其他10》的編碼原則僅是將《行列30》的一碼拆成兩碼，其它未做更動，故可知其二根字的重碼率應與《行列30》的二根字相同，皆為1.5字。\n有趣的是，《行列10》在二根字4鍵時，同樣也已是鍵入完整的編碼了，但其重碼率卻是高於《行列30》的1.7字。其原因為雖然《行列10》在4鍵時可提供1,0000種編碼組合，比《其他10》900種多出10倍有餘；但《行列10》裡同樣只有四碼完整編碼的字卻有「四碼二根字、四碼三根字、四碼四根字」，其撿字範圍中共有2324字，是《其他10》1114字的兩倍；再加上中文字的結構並不會用掉所有的編碼組合，故在加加減減後《行列10》的重碼率反而高於《其他10》（與《行列30》），但話說回來，1.5字與1.7字也相去不遠就是了。\n至於《懶人10》的也是採用「上下」部份，故其完整編碼的撿字率應與《行列30》和《其他10》相同，只是二根字的完整編碼是5鍵；換言之，二根字4鍵時《懶人10》還差1鍵才能鍵完編碼，故其重碼率劣於《其他10》。\n\n三根字5鍵與四根字6鍵部份，《行列10》憑藉著優越的編碼組合數量（5碼十萬組、6碼百萬組），故其重碼率優於其他兩者。\n《懶人10》與《行列10》則彼此優劣互見，但重碼率不多於6鍵，也已算堪用了。\n\n七、結論：\n依二到四根字的字數做平均，各版本《數字行列》在4鍵與5鍵時的平均重碼率為：\n4鍵：懶5.8字，行20.6字，其56.8字，\n5鍵：懶4.6字，行 3.8字，其 8.4字。\n注：《行列10》與《其他10》二根字僅有4鍵，故5鍵時的重碼率未計算此二者的二根字。\n\n若以《行列10》4鍵（即四根字）的重碼率1.17字為標準，可看出《懶人行列10》在鍵入4鍵時，重碼率已降至5.8字；雖然不好，但也表示平均下來，只要鍵入4鍵，基本上都能在候選列上找到想要的字。至於《其他10》與《行列10》要在5鍵時才能達到此標準。\n不過《行列10》在5鍵時的重碼率低於《懶人10》，顯見《行列10》憑藉改良後的次碼，提供了大量的編碼空間，繼而有效地降低了重碼率。\n礙於本文並未計算出所有鍵數下的重碼率，故無法計算6鍵以上的平均重碼率。但就已知的數據來推斷，《行列10》的重碼率應會大幅降低（因次碼持續提供大量編碼空間）；《其他10》的減少速度也會優於《懶人10》（因《懶人10》多了「.」）。\n三者的重碼率最終在鍵到完整編碼後達到最低（約1.2字），但就《懶人10》「不求精準，但期順手」的「堪用」的標準來看，《懶人行列10》的表現也算可圈可點的了。\n\n再者，前述所有分析皆建立在「排序選取」已「關閉」的條件下。\n而一但開啟「排序選取」，將「精確」這項要求交給LimeHD去負責後，撿字精度會再加強兩個檔次。\n原則上是LimeHD使用一段時間後，只要鍵入數字部份，絕大多數的的常用字都會直接出現；若否，則再加「.」，即可篩掉候選列上字根數量不符的文字（排字取取開啟後，候選列上的字不一定會按編碼長度排序）。\n至於說習慣使用按空白鍵上字者（要打的字必須被放到候選列上第一位，並被反白），「個人的經驗」是4鍵、最多5鍵，即可將要打的字推到候選列上第一位。即一根字、二根字通常要打出完整編碼，或至少是後半段「上下」部份的第一碼；三根字通常是3鍵的首碼數字，再加一個「.」；四根字則僅需鍵入4碼的數字部份，即可將想要打的字按空白鍵上字。\n重碼率的計算結果也支持這個經驗，即4到5鍵便能將重碼率控制在5字以下，配合「排序選取」的功能，即可將常用字推到候選列第一位，以供按下空白鍵上字。\n\n最後，《懶人行列10》雖然將一個字根拆解成2鍵的首碼與上下碼，但其編碼採用先首碼、再上下碼的分段方式，可有效降低重碼率與按鍵次數。同時，配合排序選取功能，可讓多數字在鍵完數字部份後即可上字，免去思索上下碼究竟為何的困擾，繼而增加打字速度。\n此外，因《懶人行列10》的編碼設計儘量貼進《行列30》的習慣，故由《行列30》轉換至《懶人行列10》的過程中，遭遇的門檻亦是最低的。\n\n因此，結論就是，若要在手機上使用行列輸入法，那就來試試《懶人行列10》吧。\n"},{"ename":"FreeNewCJ:en;自由大新:zh_CN;自由大新:zh;","cname":"自由大新","name":"","cin":"table\/freenewcj.cin","db":"db\/freenewcj.cin.db","license":"自由大新倉頡專業 7.0 國際版\n網址: http:\/\/cle.linux.org.tw\/trac\/wiki\/FreeNewCJCin\n原版商業公司: http:\/\/www.eztyping.com.tw\/\ncopyright (c) 2006-2007 by FreeNewCJCin\n格式轉換(無附加限制): 趙惟倫 <bluebat@member.fsf.org>, 2007\n授權方式: Public Domain\nsname 自新\n"},{"ename":"jidianWubi (JiDianWubi)","cname":"极点五笔","name":"","cin":"table\/jidianwubi.cin","db":"db\/jidianwubi.cin.db","license":"","tcname":"极点五笔","scname":"极点五笔"},{"ename":"JinJin","cname":"晶晶碼","name":"","cin":"table\/jinjin.cin","db":"db\/jinjin.cin.db","license":""},{"ename":"Cangjie (Simplified Chinese)","cname":"简体仓颉","name":"","cin":"table\/jtcj.cin","db":"db\/jtcj.cin.db","license":"This is the ChanJei input method table in GB encoding.\n\nPlease visit the URL:  http:\/\/www.chinese.net.my\/cj\nhttp:\/\/www.geocities.com\/RainForest\/9178\/maincjgb.htm\nfor further information.\n\n","tcname":"簡體倉頡","scname":"简体仓颉"},{"ename":"Cantonese (Toneless)","cname":"粵語拼音 (無調號版)","name":"","cin":"table\/jyutping-toneless.cin","db":"db\/jyutping-toneless.cin.db","license":"\n$Id: jyutping.cin,v 1.1.1.1 2000\/12\/09 01:57:02 thhsieh Exp $\n====================================================================\n\nThis cin file is originally converted from the \"phrase box\" file\navailable on the Linguistic Society of Hong Kong's website:\n\nhttp:\/\/ctlhpan.cityu.edu.hk\/lshk\/jyutping\/\n\nYou are free to use and redistribute this file; the author only\nwishes you keep the following notice intact:\n\n\"The copyright of the Jyutping phrase box belongs to the Linguistic\nSociety of Hong Kong.  We would like to thank the Jyutping Group of\nthe Linguistic Society of Hong Kong for permission to use the\nelectronic file in our research and\/or product development.\"\n\nFor more information about the Jyutping system, visit the above\nwebsite.  The romanisation system is a little bit different from\ncommon Hong Kong usage, but this system is a lot more systematic.\n\n"},{"ename":"Cantonese","cname":"粵語拼音","name":"","cin":"table\/jyutping.cin","db":"db\/jyutping.cin.db","license":"\n$Id: jyutping.cin,v 1.1.1.1 2000\/12\/09 01:57:02 thhsieh Exp $\n====================================================================\n\nThis cin file is originally converted from the \"phrase box\" file\navailable on the Linguistic Society of Hong Kong's website:\n\nhttp:\/\/ctlhpan.cityu.edu.hk\/lshk\/jyutping\/\n\nYou are free to use and redistribute this file; the author only\nwishes you keep the following notice intact:\n\n\"The copyright of the Jyutping phrase box belongs to the Linguistic\nSociety of Hong Kong.  We would like to thank the Jyutping Group of\nthe Linguistic Society of Hong Kong for permission to use the\nelectronic file in our research and\/or product development.\"\n\nFor more information about the Jyutping system, visit the above\nwebsite.  The romanisation system is a little bit different from\ncommon Hong Kong usage, but this system is a lot more systematic.\n\n"},{"ename":"LXSY","cname":"灵形速影","name":"","cin":"table\/lxsy_0.40.cin","db":"db\/lxsy_0.40.cin.db","license":"名称：灵形速影（简称 lxsy）\n原作者：消逝\n版本：针对字的版本为 0.40 优化，针对词的为 0.41 版本\n特此授权给 OkidoKey 无偿使用 任何人都可免费内建此词库（无关收费 APP 与否）\n本词库为开源词库，可以修改、复制以及散布此输入法表格，且修改后看输入法表格中若有任何错误等问题，皆与原作者无关。\n本词库为群友为了符合情况进行键位替换。\n另：转载请注明出处，更多关于原作者信息请访问极速社区 http:\/\/www.jsxiaoshi.com\/\n"},{"ename":"LXSY","cname":"灵形速影(词)","name":"","cin":"table\/lxsy_0.41.cin","db":"db\/lxsy_0.41.cin.db","license":"名称：灵形速影（简称 lxsy）\n原作者：消逝\n版本：针对字的版本为 0.40 优化，针对词的为 0.41 版本\n特此授权给 OkidoKey 无偿使用 任何人都可免费内建此词库（无关收费 APP 与否）\n本词库为开源词库，可以修改、复制以及散布此输入法表格，且修改后看输入法表格中若有任何错误等问题，皆与原作者无关。\n本词库为群友为了符合情况进行键位替换。\n另：转载请注明出处，更多关于原作者信息请访问极速社区 http:\/\/www.jsxiaoshi.com\/\n"},{"ename":"ez","cname":"輕鬆","name":"","cin":"table\/ov_ez.cin","db":"db\/ov_ez.cin.db","license":"版權聲明:\n\n本輸入法表格(輕鬆輸入法單字版) 乃根據《輕鬆資訊「輕鬆輸入法大詞庫」公眾授權書》的規定，\n以 GPL V2.0 或更新的版本所釋出，在遵守該授權書的規定下，\n可以修改、複製及散佈本輸入法表格，唯本輸入法表格卻不包含任何擔保；\n且修改後的輸入法表格中若有任何錯誤，皆與原作者無關。\n如有需要，請參閱 《輕鬆資訊「輕鬆輸入法大詞庫」公眾授權書》\n及 GNU GENERAL PUBLIC LICENSE 以了解更詳細的規定。\n\n本輸入法表格為 xcin-2.3 的 「ez.cin」（單字版）的修改版本。\n\n\nWoodman Tuen <wmtuen@gmail.com>, 25-10-2008\n\n\n"},{"ename":"easy","cname":"輕鬆2006原味版(for香草)","name":"","cin":"table\/ov_ez75.cin","db":"db\/ov_ez75.cin.db","license":"this file is encoded in UTF-8\n\n輕鬆輸入法 .cin 格式檔頭\n\n"},{"ename":"ezbig","cname":"輕鬆大詞庫","name":"","cin":"table\/ov_ezbig.cin","db":"db\/ov_ezbig.cin.db","license":"版權聲明:\n\n本輸入法表格(輕鬆輸入法大型詞庫版) 乃根據《輕鬆資訊「輕鬆輸入法大詞庫」公眾授權書》的規定，\n以 GPL V2.0 或更新的版本所釋出，在遵守該授權書的規定下，\n可以修改、複製及散佈本輸入法表格，唯本輸入法表格卻不包含任何擔保；\n且修改後的輸入法表格中若有任何錯誤，皆與原作者無關。\n如有需要，請參閱 《輕鬆資訊「輕鬆輸入法大詞庫」公眾授權書》\n及 GNU GENERAL PUBLIC LICENSE 以了解更詳細的規定。\n\n本輸入法表格為 xcin-2.3 的 「ezbig.cin」（大型詞庫版）的修改版本。\n\n\nWoodman Tuen <wmtuen@gmail.com>, 25-10-2008\n\n\n"},{"ename":"ezsmall","cname":"輕鬆小詞庫","name":"","cin":"table\/ov_ezsmall.cin","db":"db\/ov_ezsmall.cin.db","license":"版權聲明:\n\n本輸入法表格(輕鬆輸入法小型詞庫版) 乃根據《輕鬆資訊「輕鬆輸入法大詞庫」公眾授權書》的規定，\n以 GPL V2.0 或更新的版本所釋出，在遵守該授權書的規定下，\n可以修改、複製及散佈本輸入法表格，唯本輸入法表格卻不包含任何擔保；\n且修改後的輸入法表格中若有任何錯誤，皆與原作者無關。\n如有需要，請參閱 《輕鬆資訊「輕鬆輸入法大詞庫」公眾授權書》\n及 GNU GENERAL PUBLIC LICENSE 以了解更詳細的規定。\n\n本輸入法表格為 xcin-2.3 的 「ezsmall.cin」（小型詞庫版）的修改版本。\n\n\nWoodman Tuen <wmtuen@gmail.com>, 25-10-2008\n\n\n"},{"ename":"Pictograph","cname":"華象直覺","name":"","cin":"table\/pictograph.cin","db":"db\/pictograph.cin.db","license":"華象直覺輸入法\nhttp:\/\/www.pictograph.com.tw\/\n"},{"ename":"Pinyin (Simplified Chinese)","cname":"简体汉語拼音","name":"","cin":"table\/pinyin.cin","db":"db\/pinyin.cin.db","license":"","tcname":"簡體漢語拼音","scname":"汉语拼音"},{"ename":"PinyinTW","cname":"正體漢語拼音","name":"","cin":"table\/pinyinbig5.cin","db":"db\/pinyinbig5.cin.db","license":""},{"ename":"POJ","cname":"白話字漢羅","name":"","cin":"table\/poj-holo.cin","db":"db\/poj-holo.cin.db","license":"\n\npoj.cin v0.1, 2005-01-25\n\n本poj.cin原始檔案是由劉傑岳 Lâu Kiatgak <kiatgak@yahoo.com.tw>利用\n甘為霖的《廈門音新字典》(Kam Ûi-lîm ê \"Ē-mn̄g im ê jī-tián\")\n(A dictionary of the Amoy vernacury by Willian Campbell)校對、補充後\n的作品本檔案依據 GNU General Public License (GPL) version 2 或新版公開\n授權，歡迎各界散佈及使用。\no· 用ou 鼻音用 nn 入聲鼻音用 nnh 表示\n\n"},{"ename":"Quick-Changjei","cname":"順序速成","name":"","cin":"table\/qcj.cin","db":"db\/qcj.cin.db","license":"QuickChangJei input method table for UTF-8 encoding.\n\nConverted from http:\/\/www.scj2000.com\/ by Janus Ng on Dec 30, 2004\nISO\/IEC 10646:1-2000 characters are cleaned up to ISO\/IEC 1-646:2-2001\nwhile keeping some unique character that not found in\nISO\/IEC 1-646:2-2001\n\nThis table also extended to include HKSCS encodings. For details, see\nhttp:\/\/www.info.gov.hk\/digital21\/chi\/hkscs\/index.html\n\n"},{"ename":"scj6","cname":"快倉六","name":"","cin":"table\/scj6.cin","db":"db\/scj6.cin.db","license":"﻿ This file must be encoded into UTF-8.\nThis file comes from http:\/\/www.scj2000.net\n===============================================================\n快倉2000_快速倉頡輸入法第六代(v6.2.2)\n===============================================================\n網址: http:\/\/www.scj2000.com\n網址: http:\/\/www.scj2000.net\nCopyright (C) 2002-2009 麥志洪 <makchehu@netvigator.com>\nCopyright (C) 2002-2009 Quintus Leung <quintus@scj2000.net>\n授權方式: GPL version 3\nThis program is free software; you can redistribute it and\/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nSupported Characters: 15,270 Unique Traditional and Simplified Chinese Characters\nSupported Encodings : Unicode4.0, BIG5, BIG5-HKSCS, GB18030, GBK, GB\n\n===============================================================\n倉頡第五代國際版\n===============================================================\n輸入法發明人：朱邦復先生 http:\/\/www.cbflabs.com\n碼表統一維護：倉頡之友.馬來西亞  http:\/\/www.chinesecj.com\n倉頡輸入版權：本輸入法無版權，歡迎大家復制使用及推廣倉頡。\n\n===============================================================\n倉頡第三代\n===============================================================\n輸入法發明人：朱邦復先生 http:\/\/www.cbflabs.com\n碼表維護：倉頡之友.馬來西亞  http:\/\/www.chinesecj.com\n\n","tcname":"快倉六","scname":"快仓六"},{"ename":"Speedy-Changjei-7","cname":"快倉七代","name":"","cin":"table\/scj7.cin","db":"db\/scj7.cin.db","license":"SpeedChangJei input method table for UTF-8 encoding.\n\nConverted from http:\/\/www.scj2000.com\/ by Janus Ng on Dec 31, 2004\ndigit terminated and some single key characters remapped\n\nThis table also extended to include HKSCS encodings. For details, see\nhttp:\/\/www.info.gov.hk\/digital21\/chi\/hkscs\/index.html\n\n"},{"ename":"[CN]Shuangpin","cname":"简体双拼","name":"","cin":"table\/shuangpin.cin","db":"db\/shuangpin.cin.db","license":""},{"ename":"Simplex (Large Character Set)","cname":"簡易（大字集）","name":"","cin":"table\/simplex-ext.cin","db":"db\/simplex-ext.cin.db","license":"This file includes CNS11643 and Unicode compatible characters based on\nopendesktop.org.tw's simplex.cin.\nThis work has been done by yylin and b6s.\n\n","tcname":"簡易（大字集）","scname":"简易（大字集）"},{"ename":"Simplex","cname":"簡易（速成）","name":"","cin":"table\/simplex.cin","db":"db\/simplex.cin.db","license":"","tcname":"簡易（速成）","scname":"繁体简易"},{"ename":"TaiwanMinNanZhuYin","cname":"台式閩南語注音","name":"","cin":"table\/taiwain-minnan-zhuyin.cin","db":"db\/taiwain-minnan-zhuyin.cin.db","license":"By Arne Götje after Yang Ching-chu's Taiwanese Dictionary\n\n"},{"ename":"Traditional-CangJie","cname":"繁倉","name":"","cin":"table\/tcj.cin","db":"db\/tcj.cin.db","license":"繁體倉頡輸入法 1.0 版\n趙惟倫 <chaoweilun@sinanet.com> GPL 1999.7\n增加注音符號(x*)及標點符號(z*)之筆畫拆碼\n根據倉頡第三代 (朱邦復) 及標準倉頡 (CMEX,TCA,III)\n參考 \"輕鬆學標準倉頡輸入法\"(林志和 編)\n"},{"ename":"TP Hakka HoiLiuk","cname":"通用拼音客家話 海陸腔","name":"","cin":"table\/tp_hakka_hl.cin","db":"db\/tp_hakka_hl.cin.db","license":"\n\ntp_hakka_hl.cin  2007\/11\/03 20:47\n\n本檔是由陳念波 <nienpo@yahoo.com> 依據\n《台灣客家話辭典》編者徐兆泉老師提供的\n同音字檢索資料\n使用 python script 製作\n並加入「四海話」發音\n本檔案依據 Creative Commons 依「姓名標示」、「相同方式分享」、「禁止商業使用」\n授權，歡迎各界散佈及使用。\n授權詳情請參閱\n<http:\/\/creativecommons.org\/licenses\/by-nc-sa\/2.5\/tw\/deed.zh_TW>\n客家話裏的「我」是用「亻厓」這個字，但此字的 unicode 編碼是 U+2028E，是十六進位的五位數，\n屬於 CJK Unified Ideographs Extension B, 含有此字的字型檔不是每個人都有。\n此 cin 檔含此字。但是，為了方便一般使用狀況，把「亻厓」這個字的發音\nnga̠i (四縣腔) ngai (海陸腔) 對應到「我」這個字。\n此檔含有 11 個 Privat Usage Area 編碼段 (U+E000 to U+F8FF) 的字，目前沒有收錄於\nunicode 中，是徐老師造的字。本檔另外以示意方式表示這些字，如 (亻恩)，並加入 LaTeX 組合\n這些字的指令 (使用 LaTeX 時可用)，應不會造成一般使用者的困擾。\n\n"},{"ename":"TP Hakka SiYen","cname":"通用拼音客家話 四縣腔","name":"","cin":"table\/tp_hakka_sy.cin","db":"db\/tp_hakka_sy.cin.db","license":"\n\ntp_hakka_sy.cin  2007\/11\/03 20:46\n\n本檔是由陳念波 <nienpo@yahoo.com> 依據\n《台灣客家話辭典》編者徐兆泉老師提供的\n同音字檢索資料\n使用 python script 製作\n並加入「四海話」發音\n本檔案依據 Creative Commons 依「姓名標示」、「相同方式分享」、「禁止商業使用」\n授權，歡迎各界散佈及使用。\n授權詳情請參閱\n<http:\/\/creativecommons.org\/licenses\/by-nc-sa\/2.5\/tw\/deed.zh_TW>\n客家話裏的「我」是用「亻厓」這個字，但此字的 unicode 編碼是 U+2028E，是十六進位的五位數，\n屬於 CJK Unified Ideographs Extension B, 含有此字的字型檔不是每個人都有。\n此 cin 檔含此字。但是，為了方便一般使用狀況，把「亻厓」這個字的發音\nnga̠i (四縣腔) ngai (海陸腔) 對應到「我」這個字。\n此檔含有 11 個 Privat Usage Area 編碼段 (U+E000 to U+F8FF) 的字，目前沒有收錄於\nunicode 中，是徐老師造的字。本檔另外以示意方式表示這些字，如 (亻恩)，並加入 LaTeX 組合\n這些字的指令 (使用 LaTeX 時可用)，應不會造成一般使用者的困擾。\n\n"},{"ename":"Wu Phonetic (Full)","cname":"吳語注音法（完整）","name":"","cin":"table\/wu.cin","db":"db\/wu.cin.db","license":""},{"ename":"Wubi (Wubizixing)","cname":"简体五笔字形","name":"","cin":"table\/wubizixing.cin","db":"db\/wubizixing.cin.db","license":"","tcname":"簡體五筆字形","scname":"五笔字形"},{"ename":"Wu Phonetic (Simplified)","cname":"吴语注音法（简體）","name":"","cin":"table\/wus.cin","db":"db\/wus.cin.db","license":""},{"ename":"Wu Phonetic (Traditional)","cname":"吳語注音法（正體）","name":"","cin":"table\/wut.cin","db":"db\/wut.cin.db","license":""}]}